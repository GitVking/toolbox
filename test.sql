--easy from
select * from a
select * from a aa
select * from a,b
select * from a aa,b 
select * from a,b bb
select * from a aa,b bb 

with tmp_table as(
    select * from tableA
)
select * from tmp_table left join tableB

key_list = ['with','from','value']
join_list = ["join",
            "left join","right join",
            "left outer join","right outer join",
            "full outer join","inner join","full join"]

S01_BHDQUOTE S02_TQ_QT_BDIBQUOTE

-- SDI_BOND_QUOTE_D 债券行情日频数据
WITH TEMP as
(select A.STD_SECU_CODE,
A.SK_F_BOND,
A.BOND_CODE,
A.MKT_NAME,
A.MKT_CODE,
A.BOND_NAME,
A.BOND_SHORT_NAME,
A.ISSUECOMPCODE, --发行机构代码
A.SECODE,
A.GUARANTOR, --担保人
A.COUPONRATE,
B.CALENDAR_DAY,
B.CALENDAR_DT,
B.IF_TRADE_DT,
case
when A.MATURITYDATE = '19000101' then
null
else
(to_date(a.MATURITYDATE, 'yyyy-MM-dd') - B.CALENDAR_DAY) / 360
end as remaining_year_life,
case
when A.MATURITYDATE = '19000101' then
null
else
to_date(a.MATURITYDATE, 'yyyy-MM-dd') - B.CALENDAR_DAY
end as remaining_day_life,
to_char(B.LE_TRADE_DT, 'yyyyMMdd') LE_TRADE_DT,
to_char(B.NEXT_CALENDAR_DT, 'yyyyMMdd') NEXT_CALENDAR_DT
from (SELECT NVL(AA.DSYMBOL, A.SYMBOL || D.ENUM_CODE) AS STD_SECU_CODE, --- 标准证券代码
'BOND' || NVL(C.ENUM_CODE, '000') || A.SYMBOL AS SK_F_BOND, -- 债券代理外键
A.SYMBOL AS BOND_CODE, --债券代码
C.ENUM_NAME AS MKT_NAME, --- 市场名称
NVL(C.ENUM_CODE, '000') AS MKT_CODE, --- 市场代码
A.BONDNAME AS BOND_NAME, --- 债券名称
A.BONDSNAME AS BOND_SHORT_NAME, --- 债券简称
A.ISSUECOMPCODE, --发行机构代码
A.SECODE,
A.GUARANTOR, --担保人
A.COUPONRATE,
A.LISTDATE,
A.DELISTDATE,
A.MATURITYDATE,
ROW_NUMBER() OVER(PARTITION BY nvl(C.ENUM_CODE, '000'), A.SYMBOL ORDER BY A.EXCHANGE ASC) RN1
FROM S02_TQ_BD_BASICINFO A
LEFT JOIN (select SECODE, DSYMBOL
from (SELECT SECODE,
DSYMBOL,
ROW_NUMBER() OVER(PARTITION BY SECODE ORDER BY UPDATEDATE,(case
when ctype = '2' then
'5'
else
ctype
end) DESC) RN
FROM S02_TQ_OA_STCORRCODE
WHERE ISVALID = 1) A0
where A0.rn = 1 -- 优先取万德对应的含有市场后缀的代码
) AA
ON A.SECODE = AA.SECODE
LEFT JOIN (SELECT ENUM_CODE, ENUM_NAME, SOURCE_ENU_VALUE
FROM T00_SINITEK_SOURCE_MAPPING
WHERE SINITEK_TABLE = 'XN_TABLES' -- 目标表
AND SINITEK_FIELD = 'MKT_CODE' -- 目标字段
AND SOURCE = 'S02' -- 数据来源
AND SOURCE_TABLE = 'S02_TABLES' -- 源表
AND SOURCE_FIELD = 'NEWFINCHINA_FIELD' -- 源字段
) C
ON C.SOURCE_ENU_VALUE = A.EXCHANGE
left join (SELECT ENUM_CODE, SOURCE_ENU_VALUE
FROM T00_SINITEK_SOURCE_MAPPING A1
WHERE SINITEK_TABLE = 'XN_TABLES'
AND SINITEK_FIELD = 'STD_SECU_CODE_SUFFIX'
AND SOURCE = 'S02'
AND SOURCE_TABLE = 'S02_TABLES'
AND SOURCE_FIELD = 'NEWFINCHINA_FIELD') D
ON D.SOURCE_ENU_VALUE = A.EXCHANGE
where a.ISVALID = 1) A
INNER JOIN T00_TRADEDATE_EXTEND B
ON B.MKT_CODE = A.MKT_CODE
WHERE A.RN1 = 1
AND B.CALENDAR_DT >= A.LISTDATE
AND (B.CALENDAR_DT <= A.MATURITYDATE OR A.MATURITYDATE = '19000101')
AND B.CALENDAR_DT BETWEEN 20210825 AND 20210825),
temp1 as
(SELECT A.SECODE,
A.TRADE_DT, --- 交易日期
A.TRADE_DAY_FULL_PRICE, --- 上交易日全价
A.OPEN_FULL_PRICE, --- 开盘全价
A.HIGH_FULL_PRICE, --- 最高全价
A.LOW_FULL_PRICE, --- 最低全价
A.CLOSING_FULL_PRICE, --- 收盘全价
A.TRADE_DAY_NET, --- 上交易日净价
A.OPENING_OF_THE_NET, --- 开盘净价
A.HIGH_NET, --- 最高净价
A.LOW_PRICE, --- 最低净价
A.CLOSING_NET, --- 收盘净价
A.TRADE_VOLUME, --- 交易量-张
A.TRADE_AMT_FULL, --- 全价交易额-元
A.TRADE_AMT_NET, --- 净价交易额-元
A.TRADE_AVG_PRICE_FULL, --- 交易全价均价
A.TRADE_AVG_PRICE_NET, --- 交易净价均价
A.PCT_CHG_NET, --- 净价涨跌幅
A.PCT_CHG_FULL --- 全价涨跌幅
FROM (SELECT T2.SECODE,
to_number(T2.TRADEDATE) AS TRADE_DT, --- 交易日期
T2.LCLOSEDIRTYPRICE AS TRADE_DAY_FULL_PRICE, --- 上交易日全价
T2.OPENDIRTYPRICE AS OPEN_FULL_PRICE, --- 开盘全价
T2.HIGHDIRTYPRICE AS HIGH_FULL_PRICE, --- 最高全价
T2.LOWDIRTYPRICE AS LOW_FULL_PRICE, --- 最低全价
T2.CLOSEDIRTYPRICE AS CLOSING_FULL_PRICE, --- 收盘全价
T2.LCLOSENETPRICE AS TRADE_DAY_NET, --- 上交易日净价 前收盘净价
T2.OPENNETPRICE AS OPENING_OF_THE_NET, --- 开盘净价
T2.HIGHNETPRICE AS HIGH_NET, --- 最高净价
T2.LOWNETPRICE AS LOW_PRICE, --- 最低净价
T2.CLOSENETPRICE AS CLOSING_NET, --- 收盘净价
T2.VOL / 100 AS TRADE_VOLUME, --- 交易量-笔 交易日当天成交的总量
T2.DIRTYPRCAMT AS TRADE_AMT_FULL, --- 全价交易额-元
T2.TRAMTNETPRC AS TRADE_AMT_NET, --- 净价交易额-元
T2.AVGDIRTYPRICE AS TRADE_AVG_PRICE_FULL, --- 交易全价均价
T2.AVGNETPRICE AS TRADE_AVG_PRICE_NET, --- 交易净价均价
T2.NETPRCPCHG AS PCT_CHG_NET, --- 净价涨跌幅
T2.DIRTYPCHG AS PCT_CHG_FULL --- 全价涨跌幅
FROM S02_TQ_QT_BDIBQUOTE T2
WHERE T2.ISVALID = 1
AND T2.TRADEDATE BETWEEN 20210825 AND 20210825
UNION ALL
SELECT T1.symbol AS SECODE,
--to_char(T1.tdate, 'yyyymmdd') AS TRADE_DT, --- 交易日期
T1.tdate AS TRADE_DT, --- 交易日期
T1.ldclose AS TRADE_DAY_FULL_PRICE, --- 上交易日全价
T1.dopen AS OPEN_FULL_PRICE, --- 开盘全价
T1.dhigh AS HIGH_FULL_PRICE, --- 最高全价
T1.dlow AS LOW_FULL_PRICE, --- 最低全价
T1.dclose AS CLOSING_FULL_PRICE, --- 收盘全价
T1.lcclose AS TRADE_DAY_NET, --- 上交易日净价 前收盘净价
T1.copen AS OPENING_OF_THE_NET, --- 开盘净价
T1.chigh AS HIGH_NET, --- 最高净价
T1.clow AS LOW_PRICE, --- 最低净价
T1.cclose AS CLOSING_NET, --- 收盘净价
CASE
WHEN T1.EXCHANGE = '001006' THEN
T1.voturnover * 10
ELSE
T1.voturnover
END AS TRADE_VOLUME, --- 交易量-张 上海证券交易所：张 深圳证券交易所：张 银行间市场：张 上海固定收益平台：手 深圳综合协议平台：张
T1.vaturnover AS TRADE_AMT_FULL, --- 全价交易额-元
T1.vaturnover AS TRADE_AMT_NET, --- 净价交易额-元
T1.avgprice AS TRADE_AVG_PRICE_FULL, --- 交易全价均价
T1.avgprice AS TRADE_AVG_PRICE_NET, --- 交易净价均价
T1.pchg AS PCT_CHG_NET, --- 净价涨跌幅
T1.pchg AS PCT_CHG_FULL --- 全价涨跌幅
FROM S01_BHDQUOTE T1
WHERE T1.tdate BETWEEN 20210825 AND 20210825
AND NOT EXISTS
(SELECT 1
FROM S02_TQ_QT_BDIBQUOTE M
WHERE M.SECODE = T1.symbol
AND M.TRADEDATE = T1.tdate
AND M.TRADEDATE BETWEEN 20210825 AND 20210825)) A),
TEMP2 as
(SELECT a.secode,
A.BONDSNAME AS SECU_SHORT_NAME, -- 证券简称
A.TRADEDATE AS TRADE_DT, -- 交易日期
'07' AS DATA_SOURCE, --数据来源
A.BONDTYPE, -- 债券类型
A.NETPRICE AS NET_PRICE, -- 净价
A.DIRTYPRICE AS ALL_PRICE, -- 全价
A.ACCRUEDINTEREST AS SUMMARY_ACCRUED_INT, -- 应计利息
A.YIELD AS YIELD, -- 收益率
A.MODDURATION AS CORRECT_DURATION, -- 修正久期
A.CONVEXITY AS CONVEXITY -- 凸性
FROM S02_TQ_QT_CSESTIMATE A -- 中证估值行情
WHERE A.ISVALID = 1
AND A.TRADEDATE BETWEEN 20210825 AND 20210825),
TEMP3 as
(SELECT A.SECODE,
A.TRADEDATE AS TRADE_DT, -- 交易日期
'01' AS DATA_SOURCE, --数据来源
A.BONDNAME AS BOND_NAME, -- 债券名称
A.BONDTYPE, -- 债券类型
A.NETPRICE AS NET_PRICE, -- 净价
A.DIRTYPRICE AS ALL_PRICE, -- 全价
A.ACCRUEDINTEREST AS SUMMARY_ACCRUED_INT, -- 应计利息
A.TERMTOMATURITY AS REMAINING_LIFE, -- 剩余年限
A.YIELD AS YIELD, -- 收益率
A.YCCODE AS YIELD_CURVE_CODE, -- 收益率曲线代码
A.YCNAME AS YIELD_CURVE_NAME, -- 收益率曲线名称
A.DURATION AS DURATION, -- 久期
A.MODDURATION AS CORRECT_DURATION, -- 修正久期
A.CONVEXITY AS CONVEXITY, -- 凸性
A.SPREAD AS SPREAD, -- 点差
A.SPREADDURATION AS SPREAD_DURATION, -- 利差久期
A.INTERESTCONVEXITY AS INTEREST_RATE_CONVEXITY, -- 利率凸性
A.SPREADCONVEXITY AS SPREAD_CONVEXITY, -- 利差凸性
A.BASISPOINTVAL AS BASE_POINT_VAL, -- 基点价值
A.TRADABLEAMOUNT AS NEGOTIABLE_STOCK, -- 可流通存量
A.INTERESTDURATION AS INTEREST_RATE_DURATION, -- 利率久期
A.DIRTYPRICEDAY AS ENDDAY_FULL_PRICE, -- 日终全价
A.DAYACCRINTE AS ENDDAY_ACCRUED_INTEREST, -- 日终应计利息
A.SURPLUSPRIN AS RESIDUAL_PRINCIPAL -- 剩余本金
FROM S01_TQ_QT_CBESTIMATE A ---债券估值表
WHERE A.ISVALID = 1
AND A.DATASOURCE = '1' -- 中债登估值数据
AND A.TRADEDATE BETWEEN 20210825 AND 20210825),
TEMP3_1 as
(SELECT A.SECODE,
A.TRADEDATE AS TRADE_DT, -- 交易日期
'01' AS DATA_SOURCE, --数据来源
A.BONDNAME AS BOND_NAME, -- 债券名称
A.BONDTYPE, -- 债券类型
A.NETPRICE AS NET_PRICE, -- 净价
A.DIRTYPRICE AS ALL_PRICE, -- 全价
A.ACCRUEDINTEREST AS SUMMARY_ACCRUED_INT, -- 应计利息
A.TERMTOMATURITY AS REMAINING_LIFE, -- 剩余年限
A.YIELD AS YIELD, -- 收益率
A.YCCODE AS YIELD_CURVE_CODE, -- 收益率曲线代码
A.YCNAME AS YIELD_CURVE_NAME, -- 收益率曲线名称
A.DURATION AS DURATION, -- 久期
A.MODDURATION AS CORRECT_DURATION, -- 修正久期
A.CONVEXITY AS CONVEXITY, -- 凸性
A.SPREAD AS SPREAD, -- 点差
A.SPREADDURATION AS SPREAD_DURATION, -- 利差久期
A.INTERESTCONVEXITY AS INTEREST_RATE_CONVEXITY, -- 利率凸性
A.SPREADCONVEXITY AS SPREAD_CONVEXITY, -- 利差凸性
A.BASISPOINTVAL AS BASE_POINT_VAL, -- 基点价值
A.TRADABLEAMOUNT AS NEGOTIABLE_STOCK, -- 可流通存量
A.INTERESTDURATION AS INTEREST_RATE_DURATION, -- 利率久期
A.DIRTYPRICEDAY AS ENDDAY_FULL_PRICE, -- 日终全价
A.DAYACCRINTE AS ENDDAY_ACCRUED_INTEREST, -- 日终应计利息
A.SURPLUSPRIN AS RESIDUAL_PRINCIPAL -- 剩余本金
FROM S01_TQ_QT_CBESTIMATE A ---债券估值表
WHERE A.ISVALID = 1
AND A.DATASOURCE = '1' -- 中债登估值数据
AND A.TRADEDATE BETWEEN 20210825 AND 20210825
AND A.VALUATIONTYPE = '1'),
temp0 as
(SELECT r1.COMPCODE,
r2.CALENDAR_DT,
r1.BEGINDATE,
r1.ENDDATE,
r1.INDCLASSCODE,
r1.LEVEL1NAME, -- 申万一级行业
r1.LEVEL2NAME -- 申万二级行业
FROM S02_TQ_COMP_INDUSTRY r1
INNER JOIN T00_TRADEDATE_EXTEND r2
ON r2.MKT_CODE = '001'
where r2.CALENDAR_DT >= r1.BEGINDATE
AND (r2.CALENDAR_DT <= r1.ENDDATE OR r1.ENDDATE = '19000101')
AND r1.INDCLASSCODE = '2214' -- 申万行业分类（2014）
AND r1.ISVALID = 1
and R2.CALENDAR_DT BETWEEN 20210825 AND 20210825),
TEMP4 AS
(SELECT *
FROM ( -- 主体评级
SELECT A.SECODE,
A.CALENDAR_DT,
B.RATETYPE,
B.RATECOMPCODE,
B.RATECOMNAME,
B.CREDITRATE, -- 信用评级
td1.PROPERTY_CNNAME AS EXPTRATING, -- 评级展望
ROW_NUMBER() OVER(PARTITION BY A.SECODE, B.RATETYPE ORDER BY B.PUBLISHDATE DESC) RN
FROM temp A
INNER JOIN S02_TQ_BD_CREDITRTISSUE B -- 发债机构信用评级
ON A.ISSUECOMPCODE = B.compcode
AND b.isvalid = 1
LEFT JOIN S02_TQ_OA_DATADICT td1
ON td1.PROPERTY_ID = B.EXPTRATING
AND td1.E_NAME = 'TQ_BD_CREDITRTISSUE'
AND td1.COLNAME = 'EXPTRATING'
WHERE (b.RATECOMNAME NOT IN ('标准普尔评级服务公司',
'中国证券监督管理委员会',
'穆迪公司',
'惠誉国际信用评级有限公司',
'中债资信评估有限责任公司',
'中国证券业协会',
'穆迪投资者服务香港有限公司',
'标准普尔香港有限公司',
'株式会社日本格付研究所',
'联合评级国际有限公司') OR
b.RATECOMNAME IS NULL)
AND B.RATETYPE = '1' -- 长期债务评级
AND B.PUBLISHDATE <= A.CALENDAR_DT) zt1
WHERE zt1.RN = 1),
TEMP5 AS
(SELECT *
FROM ( -- 取中债资信的主体评级
SELECT A.SECODE,
A.CALENDAR_DT,
B.RATETYPE,
B.RATECOMPCODE,
B.RATECOMNAME,
B.CREDITRATE, -- 信用评级
td1.PROPERTY_CNNAME AS EXPTRATING, -- 评级展望
ROW_NUMBER() OVER(PARTITION BY A.SECODE, B.RATETYPE ORDER BY B.PUBLISHDATE DESC) RN
FROM temp A
INNER JOIN S02_TQ_BD_CREDITRTISSUE B -- 发债机构信用评级
ON A.ISSUECOMPCODE = B.compcode
AND B.ISVALID = 1
-- INNER JOIN T00_CREDITRATE D
-- ON B.CREDITRATE = D.CREDIT_RATING
-- AND B.RATETYPE = D.RATING_TYPE
LEFT JOIN S02_TQ_OA_DATADICT td1
ON td1.PROPERTY_ID = B.EXPTRATING
AND td1.E_NAME = 'TQ_BD_CREDITRTISSUE'
AND td1.COLNAME = 'EXPTRATING'
WHERE B.RATECOMPCODE = '80160465'
-- AND B.RATECOMNAME = '中债资信评估有限责任公司'
AND B.RATETYPE = '1' -- 长期债务评级
AND B.PUBLISHDATE <= A.CALENDAR_DT) zt2
WHERE zt2.RN = 1),
TEMP6 AS -- 债项评级
(SELECT *
FROM (SELECT A.SECODE,
A.CALENDAR_DT,
B.RATECOMPCODE, -- 资信评估机构代码
B.RATECOMNAME, -- 资信评估机构名称
B.CREDITRATE,
B.RATETYPE,
td1.PROPERTY_CNNAME AS EXPTRATING,
td2.PROPERTY_CNNAME AS RADJUSTDIR,
ROW_NUMBER() OVER(PARTITION BY a.SECODE ORDER BY CREDITDATE DESC) RN
FROM temp A
INNER JOIN S02_TQ_BD_CREDITRATE B
ON A.SECODE = B.SECODE
LEFT JOIN S02_TQ_OA_DATADICT td1
ON td1.PROPERTY_ID = B.EXPTRATING
AND td1.E_NAME = 'TQ_BD_CREDITRATE'
AND td1.COLNAME = 'EXPTRATING'
LEFT JOIN S02_TQ_OA_DATADICT td2
ON td2.PROPERTY_ID = B.RADJUSTDIR
AND td2.E_NAME = 'TQ_BD_CREDITRATE'
AND td2.COLNAME = 'RADJUSTDIR'
WHERE B.ISVALID = 1
AND B.RATETYPE = '1' -- 长期债务评级
AND (B.RATECOMNAME NOT IN ('标准普尔评级服务公司',
'中国证券监督管理委员会',
'穆迪公司',
'惠誉国际信用评级有限公司',
'中债资信评估有限责任公司',
'中国证券业协会',
'穆迪投资者服务香港有限公司',
'标准普尔香港有限公司',
'株式会社日本格付研究所',
'联合评级国际有限公司') OR
B.RATECOMNAME IS NULL)
AND B.BEGINDATE <= A.CALENDAR_DT
AND (B.ENDDATE >= A.CALENDAR_DT OR B.ENDDATE = '19000101')) zt3
WHERE zt3.rn = 1),
TEMP7 AS -- 债项评级
(SELECT *
FROM (SELECT A.SECODE,
A.CALENDAR_DT,
B.CREDITRATE,
ROW_NUMBER() OVER(PARTITION BY a.SECODE ORDER BY CREDITDATE DESC) RN
FROM temp A
INNER JOIN S02_TQ_BD_CREDITRATE B
ON A.SECODE = B.SECODE
WHERE B.ISVALID = 1
AND B.RATETYPE = '1' -- 长期债务评级
AND B.RATECOMPCODE = '80160465'
-- AND B.RATECOMNAME='中债资信评估有限责任公司'
AND B.BEGINDATE <= A.CALENDAR_DT
AND (B.ENDDATE >= A.CALENDAR_DT OR B.ENDDATE = '19000101')) zt4
WHERE zt4.rn = 1),
TEMP8 AS -- 担保评级
(SELECT *
FROM ( -- 取中债资信主评机构的主体评级
SELECT A.SECODE,
A.CALENDAR_DT,
B.RATETYPE,
B.RATECOMPCODE,
B.RATECOMNAME,
B.CREDITRATE, -- 信用评级
td1.PROPERTY_CNNAME AS EXPTRATING, -- 评级展望
ROW_NUMBER() OVER(PARTITION BY A.SECODE, B.RATETYPE ORDER BY B.PUBLISHDATE DESC) RN
FROM temp A
INNER JOIN S02_TQ_BD_CREDITRTISSUE B -- 发债机构信用评级
ON A.GUARANTOR = B.compcode
AND B.ISVALID = 1
--INNER JOIN T00_CREDITRATE D
-- ON B.CREDITRATE = D.CREDIT_RATING
-- AND B.RATETYPE = D.RATING_TYPE
LEFT JOIN S02_TQ_OA_DATADICT td1
ON td1.PROPERTY_ID = B.EXPTRATING
AND td1.E_NAME = 'TQ_BD_CREDITRTISSUE'
AND td1.COLNAME = 'EXPTRATING'
WHERE B.COMTYPE = '2' -- 担保人
AND B.RATETYPE = '1' -- 长期债务评级
AND (B.RATECOMNAME NOT IN ('标准普尔评级服务公司',
'中国证券监督管理委员会',
'穆迪公司',
'惠誉国际信用评级有限公司',
'中债资信评估有限责任公司',
'中国证券业协会',
'穆迪投资者服务香港有限公司',
'标准普尔香港有限公司',
'株式会社日本格付研究所',
'联合评级国际有限公司') OR
B.RATECOMNAME IS NULL)
AND B.PUBLISHDATE <= A.CALENDAR_DT) zt5
WHERE zt5.RN = 1)
SELECT A.STD_SECU_CODE, -- 标准证券代码
A.SK_F_BOND, -- 债券代理外键
A.BOND_CODE, -- 债券代码
A.MKT_NAME, -- 市场名称
A.MKT_CODE, -- 市场代码
A.BOND_NAME, --- 债券名称
A.BOND_SHORT_NAME, -- 债券简称
A.CALENDAR_DT AS TRADE_DT, -- 交易日期
A.IF_TRADE_DT AS IF_TRADE_DT, -- 是否交易日
CASE
WHEN A.IF_TRADE_DT = '是' THEN
C.OPENING_OF_THE_NET
END AS OPEN_NET_PRICE, -- 开盘价(净价)
CASE
WHEN A.IF_TRADE_DT = '是' THEN
C.HIGH_NET
END AS HIGH_NET_PRICE, -- 最高价(净价)
CASE
WHEN A.IF_TRADE_DT = '是' THEN
C.LOW_PRICE
END AS LOW_NET_PRICE, -- 最低价(净价)
CASE
WHEN A.IF_TRADE_DT = '是' THEN
C.CLOSING_NET
END AS CLOSE_NET_PRICE, -- 收盘价(净价)
CASE
WHEN A.IF_TRADE_DT = '是' THEN
C.TRADE_VOLUME / 10
END AS TRADE_VOLUME, -- 成交量（手）
CASE
WHEN A.IF_TRADE_DT = '是' THEN
C.TRADE_AMT_NET / 1000
END AS TRADE_AMT_NET, -- 成交金额（千元）(净价)
CASE
WHEN A.IF_TRADE_DT = '是' THEN
C.OPEN_FULL_PRICE
END AS OPEN_FULL_PRICE, -- 开盘价(全价)
CASE
WHEN A.IF_TRADE_DT = '是' THEN
C.HIGH_FULL_PRICE
END AS HIGH_FULL_PRICE, -- 最高价(全价)
CASE
WHEN A.IF_TRADE_DT = '是' THEN
C.LOW_FULL_PRICE
END AS LOW_FULL_PRICE, -- 最低价(全价)
CASE
WHEN A.IF_TRADE_DT = '是' THEN
C.CLOSING_FULL_PRICE
END AS CLOSING_FULL_PRICE, -- 收盘价(全价)
CASE
WHEN A.IF_TRADE_DT = '是' THEN
C.TRADE_AMT_FULL / 1000
END AS TRADE_AMT_FULL, -- 成交金额（千元）(全价)
CASE
WHEN A.IF_TRADE_DT = '是' THEN
C.PCT_CHG_NET
END AS PCT_CHG_NET, -- 净价涨跌幅
CASE
WHEN A.IF_TRADE_DT = '是' THEN
C.PCT_CHG_FULL
END AS PCT_CHG_FULL, -- 全价涨跌幅
CASE
WHEN A.MKT_CODE IN ('001', '002', '003') THEN
D.NET_PRICE
ELSE
E.NET_PRICE
END VALUE_NET_PRICE, -- 估值价格（净价）
CASE
WHEN A.MKT_CODE IN ('001', '002', '003') THEN
D.ALL_PRICE
ELSE
E.ALL_PRICE
END AS VALUE_FULL_PRICE, -- 估值价格（全价）
null AS VALUE_PCT_CHG_NET, -- 估价涨跌幅(净价)
null AS VALUE_PCT_CHG_FULL, -- 估价涨跌幅(全价)
NULL AS duration_wind, -- 久期(wind)
NULL AS correct_duration_wind, -- 修正久期(wind)
NULL AS convexity_wind, -- 凸性(wind)
NULL AS yield_wind, -- 到期收益率(wind)
NULL AS summary_accrued_int_wind, -- 应计利息(wind)
-- B.TERMTOMATURITY AS remaining_year_life, -- 剩余期限(年)
A.remaining_year_life AS remaining_year_life, -- 剩余期限(年)
-- B.REMAINDAYS AS remaining_day_life, -- 剩余期限(天)
A.remaining_day_life AS remaining_day_life, -- 剩余期限(天)
CASE
WHEN A.MKT_CODE IN ('001', '002', '003') THEN
D.CORRECT_DURATION
ELSE
E.CORRECT_DURATION
END CORRECT_DURATION, -- 修正久期
CASE
WHEN A.MKT_CODE IN ('001', '002', '003') THEN
D.CONVEXITY
ELSE
E.CONVEXITY
END CONVEXITY, -- 凸性
CASE
WHEN A.MKT_CODE IN ('001', '002', '003') THEN
D.SUMMARY_ACCRUED_INT
ELSE
E.SUMMARY_ACCRUED_INT
END SUMMARY_ACCRUED_INT, -- 应计利息
CASE
WHEN A.MKT_CODE IN ('001', '002', '003') THEN
D.YIELD
ELSE
E.YIELD
END YIELD, -- 到期收益率
NULL AS LONG_DURATION, -- 长久期
NULL AS pre_repayment, -- 提前还本
NULL AS pre_repayment_interest, -- 提前还息
NULL AS pre_repayment_sum, -- 提前还款合计
-- B.NEXTPAYDATE AS next_pay_ind_day, -- 下一付息日
NULL AS next_pay_ind_day, -- 下一付息日
NULL AS wind_type_lv1, -- wind债券一级分类
NULL AS wind_type_lv2, -- wind债券二级分类
F.LEVEL1NAME AS sw_ind_type_lv1, -- 申万一级行业
F.LEVEL2NAME AS sw_ind_type_lv2, -- 申万二级行业
NULL AS main_bond_rating, -- 债项评级(主评机构)
NULL AS main_issuer_rating, -- 主体评级(主评机构)
I.CREDITRATE AS new_bond_rating, -- 债项评级(最新)
I.RATECOMNAME AS new_bond_agency, -- 债项评级发布机构(最新)
G.CREDITRATE AS new_issuer_rating, -- 主体评级(最新)
G.RATECOMNAME AS new_issuer_agency, -- 主体评级发布机构(最新)
J.CREDITRATE AS bond_rating, -- 债项评级(中债资信)
H.CREDITRATE AS issuer_rating, -- 主体评级(中债资信)
NULL AS syn_creditrating, -- 合成评级
NULL AS syn_newcreditrating, -- 最新合成评级
NULL AS BOND_BALANCE, -- 债券余额
A.COUPONRATE AS CURRENT_COUPON_RATE, -- 当期票面利率
D.CORRECT_DURATION AS ANAL_MODIDURA_CSI, -- 修正久期（中证）
E.CORRECT_DURATION AS ANAL_MODIDURA_CNBD, -- 修正久期（中债）
E.CORRECT_DURATION AS ANAL_MODIDURA_RECO, -- 修正久期（推荐）
L.CORRECT_DURATION AS ANAL_MODIDURA_POWER, -- 修正久期（行权）
D.CONVEXITY AS ANAL_CNVXTY_CSI, -- 凸性（中证）
E.CONVEXITY AS ANAL_CNVXTY_CNBD, -- 凸性（中债）
D.YIELD AS ANAL_YTM_WIND_CSI, -- 到期收益率(中证)
E.YIELD AS ANAL_YTM_WIND_CNBD, -- 到期收益率(中债)
E.YIELD AS ANAL_YTM_WIND_RECO, -- 中债估价收益率（推荐）
L.YIELD AS ANAL_YTM_WIND_POWER, --中债估价收益率(行权)
D.NET_PRICE AS ANAL_NET_CSI, -- 中证净价
E.NET_PRICE AS ANAL_NET_CNBD, -- 中债净价
D.ALL_PRICE AS ANAL_DIRTY_CSI, -- 中证全价
E.ALL_PRICE AS ANAL_DIRTY_CNBD, -- 中债全价
NULL AS ISSUER_RATING_CHANGE, -- 主体评级变动方向
I.RADJUSTDIR AS bond_rating_change, -- 债项评级变动方向
k.CREDITRATE AS new_guar_rating, -- 担保评级（最新）
NULL AS guar_rating_change, -- 担保评级变动方向
k.EXPTRATING AS rate_ratingoutlook, -- 评级展望
CASE
WHEN A.IF_TRADE_DT = '是' THEN
'否'
ELSE
'是'
END IS_AUTO_FILL, -- 是否自动填充
A.CALENDAR_DAY AS DATA_DATE, -- 数据日期
'S02' AS SYSTEM_SOURCE, -- 系统来源
null AS SYNTIMESTAMP, --内部使用
sysdate AS CREATE_DT, --创建日期
sysdate AS UPDATE_DT --创建日期
FROM TEMP A
LEFT JOIN TEMP1 C
ON A.SECODE = C.SECODE
AND A.LE_TRADE_DT = C.TRADE_DT
LEFT JOIN TEMP2 D
ON A.SECODE = D.SECODE
AND A.LE_TRADE_DT = D.TRADE_DT
LEFT JOIN TEMP3 E
ON A.SECODE = E.SECODE
AND A.LE_TRADE_DT = E.TRADE_DT
LEFT JOIN TEMP3_1 L
ON A.SECODE = L.SECODE
AND A.LE_TRADE_DT = L.TRADE_DT
-- LEFT JOIN S02_TQ_BD_DAILYACCRINTE B
-- ON A.SECODE = B.SECODE
-- AND A.LE_TRADE_DT = B.TRADEDATE
-- AND B.ISVALID = 1
LEFT JOIN TEMP0 F
ON A.ISSUECOMPCODE = F.COMPCODE
AND A.CALENDAR_DT = F.CALENDAR_DT
LEFT JOIN TEMP4 G
ON A.SECODE = G.SECODE
AND A.CALENDAR_DT = G.CALENDAR_DT
LEFT JOIN TEMP5 H
ON A.SECODE = H.SECODE
AND A.CALENDAR_DT = H.CALENDAR_DT
LEFT JOIN TEMP6 I
ON A.SECODE = I.SECODE
AND A.CALENDAR_DT = I.CALENDAR_DT
LEFT JOIN TEMP7 J
ON A.SECODE = J.SECODE
AND A.CALENDAR_DT = J.CALENDAR_DT
LEFT JOIN TEMP8 k
ON A.SECODE = J.SECODE
AND A.CALENDAR_DT = k.CALENDAR_DT